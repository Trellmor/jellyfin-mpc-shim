// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Jellyfin.Sdk.Generated.Models
{
    /// <summary>
    /// Upload subtitles dto.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class UploadSubtitleDto : IParsable
    {
        /// <summary>Gets or sets the subtitle data.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Data { get; set; }
#nullable restore
#else
        public string Data { get; set; }
#endif
        /// <summary>Gets or sets the subtitle format.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Format { get; set; }
#nullable restore
#else
        public string Format { get; set; }
#endif
        /// <summary>Gets or sets a value indicating whether the subtitle is forced.</summary>
        public bool? IsForced { get; set; }
        /// <summary>Gets or sets a value indicating whether the subtitle is for hearing impaired.</summary>
        public bool? IsHearingImpaired { get; set; }
        /// <summary>Gets or sets the subtitle language.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Language { get; set; }
#nullable restore
#else
        public string Language { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Jellyfin.Sdk.Generated.Models.UploadSubtitleDto"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Jellyfin.Sdk.Generated.Models.UploadSubtitleDto CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Jellyfin.Sdk.Generated.Models.UploadSubtitleDto();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "Data", n => { Data = n.GetStringValue(); } },
                { "Format", n => { Format = n.GetStringValue(); } },
                { "IsForced", n => { IsForced = n.GetBoolValue(); } },
                { "IsHearingImpaired", n => { IsHearingImpaired = n.GetBoolValue(); } },
                { "Language", n => { Language = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("Data", Data);
            writer.WriteStringValue("Format", Format);
            writer.WriteBoolValue("IsForced", IsForced);
            writer.WriteBoolValue("IsHearingImpaired", IsHearingImpaired);
            writer.WriteStringValue("Language", Language);
        }
    }
}
#pragma warning restore CS0618
