// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Jellyfin.Sdk.Generated.Models
{
    /// <summary>
    /// Session info DTO.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class SessionInfoDto : IParsable
    {
        /// <summary>Gets or sets the additional users.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Jellyfin.Sdk.Generated.Models.SessionUserInfo>? AdditionalUsers { get; set; }
#nullable restore
#else
        public List<global::Jellyfin.Sdk.Generated.Models.SessionUserInfo> AdditionalUsers { get; set; }
#endif
        /// <summary>Gets or sets the application version.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ApplicationVersion { get; set; }
#nullable restore
#else
        public string ApplicationVersion { get; set; }
#endif
        /// <summary>Gets or sets the client capabilities.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Jellyfin.Sdk.Generated.Models.ClientCapabilitiesDto? Capabilities { get; set; }
#nullable restore
#else
        public global::Jellyfin.Sdk.Generated.Models.ClientCapabilitiesDto Capabilities { get; set; }
#endif
        /// <summary>Gets or sets the type of the client.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Client { get; set; }
#nullable restore
#else
        public string Client { get; set; }
#endif
        /// <summary>Gets or sets the device id.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DeviceId { get; set; }
#nullable restore
#else
        public string DeviceId { get; set; }
#endif
        /// <summary>Gets or sets the name of the device.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DeviceName { get; set; }
#nullable restore
#else
        public string DeviceName { get; set; }
#endif
        /// <summary>Gets or sets the type of the device.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DeviceType { get; set; }
#nullable restore
#else
        public string DeviceType { get; set; }
#endif
        /// <summary>Gets or sets a value indicating whether the session has a custom device name.</summary>
        public bool? HasCustomDeviceName { get; set; }
        /// <summary>Gets or sets the id.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>Gets or sets a value indicating whether this session is active.</summary>
        public bool? IsActive { get; set; }
        /// <summary>Gets or sets the last activity date.</summary>
        public DateTimeOffset? LastActivityDate { get; set; }
        /// <summary>Gets or sets the last paused date.</summary>
        public DateTimeOffset? LastPausedDate { get; set; }
        /// <summary>Gets or sets the last playback check in.</summary>
        public DateTimeOffset? LastPlaybackCheckIn { get; set; }
        /// <summary>Gets or sets the now playing item.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Jellyfin.Sdk.Generated.Models.BaseItemDto? NowPlayingItem { get; set; }
#nullable restore
#else
        public global::Jellyfin.Sdk.Generated.Models.BaseItemDto NowPlayingItem { get; set; }
#endif
        /// <summary>Gets or sets the now playing queue.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Jellyfin.Sdk.Generated.Models.QueueItem>? NowPlayingQueue { get; set; }
#nullable restore
#else
        public List<global::Jellyfin.Sdk.Generated.Models.QueueItem> NowPlayingQueue { get; set; }
#endif
        /// <summary>Gets or sets the now playing queue full items.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Jellyfin.Sdk.Generated.Models.BaseItemDto>? NowPlayingQueueFullItems { get; set; }
#nullable restore
#else
        public List<global::Jellyfin.Sdk.Generated.Models.BaseItemDto> NowPlayingQueueFullItems { get; set; }
#endif
        /// <summary>Gets or sets the now viewing item.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Jellyfin.Sdk.Generated.Models.BaseItemDto? NowViewingItem { get; set; }
#nullable restore
#else
        public global::Jellyfin.Sdk.Generated.Models.BaseItemDto NowViewingItem { get; set; }
#endif
        /// <summary>Gets or sets the playable media types.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Jellyfin.Sdk.Generated.Models.MediaType?>? PlayableMediaTypes { get; set; }
#nullable restore
#else
        public List<global::Jellyfin.Sdk.Generated.Models.MediaType?> PlayableMediaTypes { get; set; }
#endif
        /// <summary>Gets or sets the playlist item id.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PlaylistItemId { get; set; }
#nullable restore
#else
        public string PlaylistItemId { get; set; }
#endif
        /// <summary>Gets or sets the play state.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Jellyfin.Sdk.Generated.Models.PlayerStateInfo? PlayState { get; set; }
#nullable restore
#else
        public global::Jellyfin.Sdk.Generated.Models.PlayerStateInfo PlayState { get; set; }
#endif
        /// <summary>Gets or sets the remote end point.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? RemoteEndPoint { get; set; }
#nullable restore
#else
        public string RemoteEndPoint { get; set; }
#endif
        /// <summary>Gets or sets the server id.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ServerId { get; set; }
#nullable restore
#else
        public string ServerId { get; set; }
#endif
        /// <summary>Gets or sets the supported commands.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Jellyfin.Sdk.Generated.Models.GeneralCommandType?>? SupportedCommands { get; set; }
#nullable restore
#else
        public List<global::Jellyfin.Sdk.Generated.Models.GeneralCommandType?> SupportedCommands { get; set; }
#endif
        /// <summary>Gets or sets a value indicating whether the session supports media control.</summary>
        public bool? SupportsMediaControl { get; set; }
        /// <summary>Gets or sets a value indicating whether the session supports remote control.</summary>
        public bool? SupportsRemoteControl { get; set; }
        /// <summary>Gets or sets the transcoding info.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Jellyfin.Sdk.Generated.Models.TranscodingInfo? TranscodingInfo { get; set; }
#nullable restore
#else
        public global::Jellyfin.Sdk.Generated.Models.TranscodingInfo TranscodingInfo { get; set; }
#endif
        /// <summary>Gets or sets the user id.</summary>
        public Guid? UserId { get; set; }
        /// <summary>Gets or sets the username.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UserName { get; set; }
#nullable restore
#else
        public string UserName { get; set; }
#endif
        /// <summary>Gets or sets the user primary image tag.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UserPrimaryImageTag { get; set; }
#nullable restore
#else
        public string UserPrimaryImageTag { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Jellyfin.Sdk.Generated.Models.SessionInfoDto"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Jellyfin.Sdk.Generated.Models.SessionInfoDto CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Jellyfin.Sdk.Generated.Models.SessionInfoDto();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "AdditionalUsers", n => { AdditionalUsers = n.GetCollectionOfObjectValues<global::Jellyfin.Sdk.Generated.Models.SessionUserInfo>(global::Jellyfin.Sdk.Generated.Models.SessionUserInfo.CreateFromDiscriminatorValue)?.AsList(); } },
                { "ApplicationVersion", n => { ApplicationVersion = n.GetStringValue(); } },
                { "Capabilities", n => { Capabilities = n.GetObjectValue<global::Jellyfin.Sdk.Generated.Models.ClientCapabilitiesDto>(global::Jellyfin.Sdk.Generated.Models.ClientCapabilitiesDto.CreateFromDiscriminatorValue); } },
                { "Client", n => { Client = n.GetStringValue(); } },
                { "DeviceId", n => { DeviceId = n.GetStringValue(); } },
                { "DeviceName", n => { DeviceName = n.GetStringValue(); } },
                { "DeviceType", n => { DeviceType = n.GetStringValue(); } },
                { "HasCustomDeviceName", n => { HasCustomDeviceName = n.GetBoolValue(); } },
                { "Id", n => { Id = n.GetStringValue(); } },
                { "IsActive", n => { IsActive = n.GetBoolValue(); } },
                { "LastActivityDate", n => { LastActivityDate = n.GetDateTimeOffsetValue(); } },
                { "LastPausedDate", n => { LastPausedDate = n.GetDateTimeOffsetValue(); } },
                { "LastPlaybackCheckIn", n => { LastPlaybackCheckIn = n.GetDateTimeOffsetValue(); } },
                { "NowPlayingItem", n => { NowPlayingItem = n.GetObjectValue<global::Jellyfin.Sdk.Generated.Models.BaseItemDto>(global::Jellyfin.Sdk.Generated.Models.BaseItemDto.CreateFromDiscriminatorValue); } },
                { "NowPlayingQueue", n => { NowPlayingQueue = n.GetCollectionOfObjectValues<global::Jellyfin.Sdk.Generated.Models.QueueItem>(global::Jellyfin.Sdk.Generated.Models.QueueItem.CreateFromDiscriminatorValue)?.AsList(); } },
                { "NowPlayingQueueFullItems", n => { NowPlayingQueueFullItems = n.GetCollectionOfObjectValues<global::Jellyfin.Sdk.Generated.Models.BaseItemDto>(global::Jellyfin.Sdk.Generated.Models.BaseItemDto.CreateFromDiscriminatorValue)?.AsList(); } },
                { "NowViewingItem", n => { NowViewingItem = n.GetObjectValue<global::Jellyfin.Sdk.Generated.Models.BaseItemDto>(global::Jellyfin.Sdk.Generated.Models.BaseItemDto.CreateFromDiscriminatorValue); } },
                { "PlayState", n => { PlayState = n.GetObjectValue<global::Jellyfin.Sdk.Generated.Models.PlayerStateInfo>(global::Jellyfin.Sdk.Generated.Models.PlayerStateInfo.CreateFromDiscriminatorValue); } },
                { "PlayableMediaTypes", n => { PlayableMediaTypes = n.GetCollectionOfEnumValues<global::Jellyfin.Sdk.Generated.Models.MediaType>()?.AsList(); } },
                { "PlaylistItemId", n => { PlaylistItemId = n.GetStringValue(); } },
                { "RemoteEndPoint", n => { RemoteEndPoint = n.GetStringValue(); } },
                { "ServerId", n => { ServerId = n.GetStringValue(); } },
                { "SupportedCommands", n => { SupportedCommands = n.GetCollectionOfEnumValues<global::Jellyfin.Sdk.Generated.Models.GeneralCommandType>()?.AsList(); } },
                { "SupportsMediaControl", n => { SupportsMediaControl = n.GetBoolValue(); } },
                { "SupportsRemoteControl", n => { SupportsRemoteControl = n.GetBoolValue(); } },
                { "TranscodingInfo", n => { TranscodingInfo = n.GetObjectValue<global::Jellyfin.Sdk.Generated.Models.TranscodingInfo>(global::Jellyfin.Sdk.Generated.Models.TranscodingInfo.CreateFromDiscriminatorValue); } },
                { "UserId", n => { UserId = n.GetGuidValue(); } },
                { "UserName", n => { UserName = n.GetStringValue(); } },
                { "UserPrimaryImageTag", n => { UserPrimaryImageTag = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfObjectValues<global::Jellyfin.Sdk.Generated.Models.SessionUserInfo>("AdditionalUsers", AdditionalUsers);
            writer.WriteStringValue("ApplicationVersion", ApplicationVersion);
            writer.WriteObjectValue<global::Jellyfin.Sdk.Generated.Models.ClientCapabilitiesDto>("Capabilities", Capabilities);
            writer.WriteStringValue("Client", Client);
            writer.WriteStringValue("DeviceId", DeviceId);
            writer.WriteStringValue("DeviceName", DeviceName);
            writer.WriteStringValue("DeviceType", DeviceType);
            writer.WriteBoolValue("HasCustomDeviceName", HasCustomDeviceName);
            writer.WriteStringValue("Id", Id);
            writer.WriteBoolValue("IsActive", IsActive);
            writer.WriteDateTimeOffsetValue("LastActivityDate", LastActivityDate);
            writer.WriteDateTimeOffsetValue("LastPausedDate", LastPausedDate);
            writer.WriteDateTimeOffsetValue("LastPlaybackCheckIn", LastPlaybackCheckIn);
            writer.WriteObjectValue<global::Jellyfin.Sdk.Generated.Models.BaseItemDto>("NowPlayingItem", NowPlayingItem);
            writer.WriteCollectionOfObjectValues<global::Jellyfin.Sdk.Generated.Models.QueueItem>("NowPlayingQueue", NowPlayingQueue);
            writer.WriteCollectionOfObjectValues<global::Jellyfin.Sdk.Generated.Models.BaseItemDto>("NowPlayingQueueFullItems", NowPlayingQueueFullItems);
            writer.WriteObjectValue<global::Jellyfin.Sdk.Generated.Models.BaseItemDto>("NowViewingItem", NowViewingItem);
            writer.WriteCollectionOfEnumValues<global::Jellyfin.Sdk.Generated.Models.MediaType>("PlayableMediaTypes", PlayableMediaTypes);
            writer.WriteStringValue("PlaylistItemId", PlaylistItemId);
            writer.WriteObjectValue<global::Jellyfin.Sdk.Generated.Models.PlayerStateInfo>("PlayState", PlayState);
            writer.WriteStringValue("RemoteEndPoint", RemoteEndPoint);
            writer.WriteStringValue("ServerId", ServerId);
            writer.WriteCollectionOfEnumValues<global::Jellyfin.Sdk.Generated.Models.GeneralCommandType>("SupportedCommands", SupportedCommands);
            writer.WriteBoolValue("SupportsMediaControl", SupportsMediaControl);
            writer.WriteBoolValue("SupportsRemoteControl", SupportsRemoteControl);
            writer.WriteObjectValue<global::Jellyfin.Sdk.Generated.Models.TranscodingInfo>("TranscodingInfo", TranscodingInfo);
            writer.WriteGuidValue("UserId", UserId);
            writer.WriteStringValue("UserName", UserName);
            writer.WriteStringValue("UserPrimaryImageTag", UserPrimaryImageTag);
        }
    }
}
#pragma warning restore CS0618
