// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Jellyfin.Sdk.Generated.Models
{
    /// <summary>
    /// Class PlaybackStopInfo.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class PlaybackStopInfo : IParsable
    {
        /// <summary>Gets or sets a value indicating whether this MediaBrowser.Model.Session.PlaybackStopInfo is failed.</summary>
        public bool? Failed { get; set; }
        /// <summary>Gets or sets the item.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Jellyfin.Sdk.Generated.Models.BaseItemDto? Item { get; set; }
#nullable restore
#else
        public global::Jellyfin.Sdk.Generated.Models.BaseItemDto Item { get; set; }
#endif
        /// <summary>Gets or sets the item identifier.</summary>
        public Guid? ItemId { get; set; }
        /// <summary>Gets or sets the live stream identifier.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LiveStreamId { get; set; }
#nullable restore
#else
        public string LiveStreamId { get; set; }
#endif
        /// <summary>Gets or sets the media version identifier.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? MediaSourceId { get; set; }
#nullable restore
#else
        public string MediaSourceId { get; set; }
#endif
        /// <summary>The NextMediaType property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? NextMediaType { get; set; }
#nullable restore
#else
        public string NextMediaType { get; set; }
#endif
        /// <summary>The NowPlayingQueue property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Jellyfin.Sdk.Generated.Models.QueueItem>? NowPlayingQueue { get; set; }
#nullable restore
#else
        public List<global::Jellyfin.Sdk.Generated.Models.QueueItem> NowPlayingQueue { get; set; }
#endif
        /// <summary>The PlaylistItemId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PlaylistItemId { get; set; }
#nullable restore
#else
        public string PlaylistItemId { get; set; }
#endif
        /// <summary>Gets or sets the play session identifier.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PlaySessionId { get; set; }
#nullable restore
#else
        public string PlaySessionId { get; set; }
#endif
        /// <summary>Gets or sets the position ticks.</summary>
        public long? PositionTicks { get; set; }
        /// <summary>Gets or sets the session id.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SessionId { get; set; }
#nullable restore
#else
        public string SessionId { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Jellyfin.Sdk.Generated.Models.PlaybackStopInfo"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Jellyfin.Sdk.Generated.Models.PlaybackStopInfo CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Jellyfin.Sdk.Generated.Models.PlaybackStopInfo();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "Failed", n => { Failed = n.GetBoolValue(); } },
                { "Item", n => { Item = n.GetObjectValue<global::Jellyfin.Sdk.Generated.Models.BaseItemDto>(global::Jellyfin.Sdk.Generated.Models.BaseItemDto.CreateFromDiscriminatorValue); } },
                { "ItemId", n => { ItemId = n.GetGuidValue(); } },
                { "LiveStreamId", n => { LiveStreamId = n.GetStringValue(); } },
                { "MediaSourceId", n => { MediaSourceId = n.GetStringValue(); } },
                { "NextMediaType", n => { NextMediaType = n.GetStringValue(); } },
                { "NowPlayingQueue", n => { NowPlayingQueue = n.GetCollectionOfObjectValues<global::Jellyfin.Sdk.Generated.Models.QueueItem>(global::Jellyfin.Sdk.Generated.Models.QueueItem.CreateFromDiscriminatorValue)?.AsList(); } },
                { "PlaySessionId", n => { PlaySessionId = n.GetStringValue(); } },
                { "PlaylistItemId", n => { PlaylistItemId = n.GetStringValue(); } },
                { "PositionTicks", n => { PositionTicks = n.GetLongValue(); } },
                { "SessionId", n => { SessionId = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteBoolValue("Failed", Failed);
            writer.WriteObjectValue<global::Jellyfin.Sdk.Generated.Models.BaseItemDto>("Item", Item);
            writer.WriteGuidValue("ItemId", ItemId);
            writer.WriteStringValue("LiveStreamId", LiveStreamId);
            writer.WriteStringValue("MediaSourceId", MediaSourceId);
            writer.WriteStringValue("NextMediaType", NextMediaType);
            writer.WriteCollectionOfObjectValues<global::Jellyfin.Sdk.Generated.Models.QueueItem>("NowPlayingQueue", NowPlayingQueue);
            writer.WriteStringValue("PlaylistItemId", PlaylistItemId);
            writer.WriteStringValue("PlaySessionId", PlaySessionId);
            writer.WriteLongValue("PositionTicks", PositionTicks);
            writer.WriteStringValue("SessionId", SessionId);
        }
    }
}
#pragma warning restore CS0618
