// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Jellyfin.Sdk.Generated.Models
{
    /// <summary>
    /// Client capabilities dto.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class ClientCapabilitiesDto : IParsable
    {
        /// <summary>Gets or sets the app store url.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AppStoreUrl { get; set; }
#nullable restore
#else
        public string AppStoreUrl { get; set; }
#endif
        /// <summary>Gets or sets the device profile.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Jellyfin.Sdk.Generated.Models.DeviceProfile? DeviceProfile { get; set; }
#nullable restore
#else
        public global::Jellyfin.Sdk.Generated.Models.DeviceProfile DeviceProfile { get; set; }
#endif
        /// <summary>Gets or sets the icon url.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? IconUrl { get; set; }
#nullable restore
#else
        public string IconUrl { get; set; }
#endif
        /// <summary>Gets or sets the list of playable media types.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Jellyfin.Sdk.Generated.Models.MediaType?>? PlayableMediaTypes { get; set; }
#nullable restore
#else
        public List<global::Jellyfin.Sdk.Generated.Models.MediaType?> PlayableMediaTypes { get; set; }
#endif
        /// <summary>Gets or sets the list of supported commands.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Jellyfin.Sdk.Generated.Models.GeneralCommandType?>? SupportedCommands { get; set; }
#nullable restore
#else
        public List<global::Jellyfin.Sdk.Generated.Models.GeneralCommandType?> SupportedCommands { get; set; }
#endif
        /// <summary>Gets or sets a value indicating whether session supports media control.</summary>
        public bool? SupportsMediaControl { get; set; }
        /// <summary>Gets or sets a value indicating whether session supports a persistent identifier.</summary>
        public bool? SupportsPersistentIdentifier { get; set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Jellyfin.Sdk.Generated.Models.ClientCapabilitiesDto"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Jellyfin.Sdk.Generated.Models.ClientCapabilitiesDto CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Jellyfin.Sdk.Generated.Models.ClientCapabilitiesDto();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "AppStoreUrl", n => { AppStoreUrl = n.GetStringValue(); } },
                { "DeviceProfile", n => { DeviceProfile = n.GetObjectValue<global::Jellyfin.Sdk.Generated.Models.DeviceProfile>(global::Jellyfin.Sdk.Generated.Models.DeviceProfile.CreateFromDiscriminatorValue); } },
                { "IconUrl", n => { IconUrl = n.GetStringValue(); } },
                { "PlayableMediaTypes", n => { PlayableMediaTypes = n.GetCollectionOfEnumValues<global::Jellyfin.Sdk.Generated.Models.MediaType>()?.AsList(); } },
                { "SupportedCommands", n => { SupportedCommands = n.GetCollectionOfEnumValues<global::Jellyfin.Sdk.Generated.Models.GeneralCommandType>()?.AsList(); } },
                { "SupportsMediaControl", n => { SupportsMediaControl = n.GetBoolValue(); } },
                { "SupportsPersistentIdentifier", n => { SupportsPersistentIdentifier = n.GetBoolValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("AppStoreUrl", AppStoreUrl);
            writer.WriteObjectValue<global::Jellyfin.Sdk.Generated.Models.DeviceProfile>("DeviceProfile", DeviceProfile);
            writer.WriteStringValue("IconUrl", IconUrl);
            writer.WriteCollectionOfEnumValues<global::Jellyfin.Sdk.Generated.Models.MediaType>("PlayableMediaTypes", PlayableMediaTypes);
            writer.WriteCollectionOfEnumValues<global::Jellyfin.Sdk.Generated.Models.GeneralCommandType>("SupportedCommands", SupportedCommands);
            writer.WriteBoolValue("SupportsMediaControl", SupportsMediaControl);
            writer.WriteBoolValue("SupportsPersistentIdentifier", SupportsPersistentIdentifier);
        }
    }
}
#pragma warning restore CS0618
