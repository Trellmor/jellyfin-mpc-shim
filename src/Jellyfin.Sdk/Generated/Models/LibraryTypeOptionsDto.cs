// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Jellyfin.Sdk.Generated.Models
{
    /// <summary>
    /// Library type options dto.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class LibraryTypeOptionsDto : IParsable
    {
        /// <summary>Gets or sets the default image options.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Jellyfin.Sdk.Generated.Models.ImageOption>? DefaultImageOptions { get; set; }
#nullable restore
#else
        public List<global::Jellyfin.Sdk.Generated.Models.ImageOption> DefaultImageOptions { get; set; }
#endif
        /// <summary>Gets or sets the image fetchers.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Jellyfin.Sdk.Generated.Models.LibraryOptionInfoDto>? ImageFetchers { get; set; }
#nullable restore
#else
        public List<global::Jellyfin.Sdk.Generated.Models.LibraryOptionInfoDto> ImageFetchers { get; set; }
#endif
        /// <summary>Gets or sets the metadata fetchers.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Jellyfin.Sdk.Generated.Models.LibraryOptionInfoDto>? MetadataFetchers { get; set; }
#nullable restore
#else
        public List<global::Jellyfin.Sdk.Generated.Models.LibraryOptionInfoDto> MetadataFetchers { get; set; }
#endif
        /// <summary>Gets or sets the supported image types.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Jellyfin.Sdk.Generated.Models.ImageType?>? SupportedImageTypes { get; set; }
#nullable restore
#else
        public List<global::Jellyfin.Sdk.Generated.Models.ImageType?> SupportedImageTypes { get; set; }
#endif
        /// <summary>Gets or sets the type.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Type { get; set; }
#nullable restore
#else
        public string Type { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Jellyfin.Sdk.Generated.Models.LibraryTypeOptionsDto"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Jellyfin.Sdk.Generated.Models.LibraryTypeOptionsDto CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Jellyfin.Sdk.Generated.Models.LibraryTypeOptionsDto();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "DefaultImageOptions", n => { DefaultImageOptions = n.GetCollectionOfObjectValues<global::Jellyfin.Sdk.Generated.Models.ImageOption>(global::Jellyfin.Sdk.Generated.Models.ImageOption.CreateFromDiscriminatorValue)?.AsList(); } },
                { "ImageFetchers", n => { ImageFetchers = n.GetCollectionOfObjectValues<global::Jellyfin.Sdk.Generated.Models.LibraryOptionInfoDto>(global::Jellyfin.Sdk.Generated.Models.LibraryOptionInfoDto.CreateFromDiscriminatorValue)?.AsList(); } },
                { "MetadataFetchers", n => { MetadataFetchers = n.GetCollectionOfObjectValues<global::Jellyfin.Sdk.Generated.Models.LibraryOptionInfoDto>(global::Jellyfin.Sdk.Generated.Models.LibraryOptionInfoDto.CreateFromDiscriminatorValue)?.AsList(); } },
                { "SupportedImageTypes", n => { SupportedImageTypes = n.GetCollectionOfEnumValues<global::Jellyfin.Sdk.Generated.Models.ImageType>()?.AsList(); } },
                { "Type", n => { Type = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfObjectValues<global::Jellyfin.Sdk.Generated.Models.ImageOption>("DefaultImageOptions", DefaultImageOptions);
            writer.WriteCollectionOfObjectValues<global::Jellyfin.Sdk.Generated.Models.LibraryOptionInfoDto>("ImageFetchers", ImageFetchers);
            writer.WriteCollectionOfObjectValues<global::Jellyfin.Sdk.Generated.Models.LibraryOptionInfoDto>("MetadataFetchers", MetadataFetchers);
            writer.WriteCollectionOfEnumValues<global::Jellyfin.Sdk.Generated.Models.ImageType>("SupportedImageTypes", SupportedImageTypes);
            writer.WriteStringValue("Type", Type);
        }
    }
}
#pragma warning restore CS0618
