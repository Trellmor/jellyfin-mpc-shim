// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Jellyfin.Sdk.Generated.Models
{
    /// <summary>
    /// Update existing playlist dto. Fields set to `null` will not be updated and keep their current values.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class UpdatePlaylistDto : IParsable
    {
        /// <summary>Gets or sets item ids of the playlist.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Guid?>? Ids { get; set; }
#nullable restore
#else
        public List<Guid?> Ids { get; set; }
#endif
        /// <summary>Gets or sets a value indicating whether the playlist is public.</summary>
        public bool? IsPublic { get; set; }
        /// <summary>Gets or sets the name of the new playlist.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>Gets or sets the playlist users.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Jellyfin.Sdk.Generated.Models.PlaylistUserPermissions>? Users { get; set; }
#nullable restore
#else
        public List<global::Jellyfin.Sdk.Generated.Models.PlaylistUserPermissions> Users { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Jellyfin.Sdk.Generated.Models.UpdatePlaylistDto"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Jellyfin.Sdk.Generated.Models.UpdatePlaylistDto CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Jellyfin.Sdk.Generated.Models.UpdatePlaylistDto();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "Ids", n => { Ids = n.GetCollectionOfPrimitiveValues<Guid?>()?.AsList(); } },
                { "IsPublic", n => { IsPublic = n.GetBoolValue(); } },
                { "Name", n => { Name = n.GetStringValue(); } },
                { "Users", n => { Users = n.GetCollectionOfObjectValues<global::Jellyfin.Sdk.Generated.Models.PlaylistUserPermissions>(global::Jellyfin.Sdk.Generated.Models.PlaylistUserPermissions.CreateFromDiscriminatorValue)?.AsList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfPrimitiveValues<Guid?>("Ids", Ids);
            writer.WriteBoolValue("IsPublic", IsPublic);
            writer.WriteStringValue("Name", Name);
            writer.WriteCollectionOfObjectValues<global::Jellyfin.Sdk.Generated.Models.PlaylistUserPermissions>("Users", Users);
        }
    }
}
#pragma warning restore CS0618
